apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

apply from: 'cucumber.gradle'
apply from: '../ktlint.gradle'

def getGitHash = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

def keystorePropertiesFile = rootProject.file("judokit-android-examples/keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 32
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.judokit.android.examples"
        minSdkVersion 21
        targetSdkVersion 32
        versionCode 220
        versionName "2.2.0 (6) -" + getGitHash()
        multiDexEnabled true

        testInstrumentationRunner "com.judokit.android.examples.test.CucumberRunner"
    }

    signingConfigs {
        config {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
            manifestPlaceholders = [crashlyticsCollectionEnabled: "true"]
            testCoverageEnabled false
        }
        debug {
            manifestPlaceholders = [crashlyticsCollectionEnabled: "false"]
        }
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    testOptions {
        animationsDisabled = true
    }
    packagingOptions {
        exclude 'META-INF/AL2.0'
        exclude 'META-INF/LGPL2.1'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(":judokit-android")

    implementation 'androidx.multidex:multidex:2.0.1'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation "androidx.core:core-ktx:$androidx_core_version"
    implementation "androidx.core:core:$androidx_core_version"
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.2'
    implementation 'androidx.preference:preference:1.1.1'
    implementation "com.github.chuckerteam.chucker:library:3.5.2"
    implementation 'cards.pay:paycardsrecognizer:1.1.0'
    ktlint 'com.pinterest:ktlint:0.41.0'

    implementation platform('com.google.firebase:firebase-bom:29.0.3')
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'

    androidTestImplementation "androidx.test:core-ktx:$androidx_test_version"
    androidTestImplementation "androidx.test:runner:$androidx_test_version"
    androidTestImplementation "androidx.test:rules:$androidx_test_version"

    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-web:$espresso_version"

    androidTestImplementation "io.cucumber:cucumber-android:4.8.4"
    androidTestImplementation "androidx.room:room-runtime:$room_version"
}
